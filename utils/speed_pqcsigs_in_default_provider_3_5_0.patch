diff --git a/crypto/evp/signature.c b/crypto/evp/signature.c
index e5bb7da..bdb6fe0 100644
--- a/crypto/evp/signature.c
+++ b/crypto/evp/signature.c
@@ -718,12 +718,16 @@ static int evp_pkey_signature_init(EVP_PKEY_CTX *ctx, EVP_SIGNATURE *signature,
 
     switch (operation) {
     case EVP_PKEY_OP_SIGN:
-        if (signature->sign_init == NULL) {
+        if (signature->sign_init != NULL) {
+            ret = signature->sign_init(ctx->op.sig.algctx, provkey, params);
+        } else if (signature->sign_message_init != NULL) {
+            /* for openssl speed ML-DSA-{44,65,87} SLH-DSA-SHA{2,KE}-{128,192,256}{s,f} */
+            ret = signature->sign_message_init(ctx->op.sig.algctx, provkey, params);
+        } else {
             ERR_raise(ERR_LIB_EVP, EVP_R_OPERATION_NOT_SUPPORTED_FOR_THIS_KEYTYPE);
             ret = -2;
             goto err;
         }
-        ret = signature->sign_init(ctx->op.sig.algctx, provkey, params);
         break;
     case EVP_PKEY_OP_SIGNMSG:
         if (signature->sign_message_init == NULL) {
@@ -734,12 +738,16 @@ static int evp_pkey_signature_init(EVP_PKEY_CTX *ctx, EVP_SIGNATURE *signature,
         ret = signature->sign_message_init(ctx->op.sig.algctx, provkey, params);
         break;
     case EVP_PKEY_OP_VERIFY:
-        if (signature->verify_init == NULL) {
+        if (signature->verify_init != NULL) {
+            ret = signature->verify_init(ctx->op.sig.algctx, provkey, params);
+        } else if (signature->verify_message_init != NULL) {
+            /* for openssl speed ML-DSA-{44,65,87} SLH-DSA-SHA{2,KE}-{128,192,256}{s,f} */
+            ret = signature->verify_message_init(ctx->op.sig.algctx, provkey, params);
+        } else {
             ERR_raise(ERR_LIB_EVP, EVP_R_OPERATION_NOT_SUPPORTED_FOR_THIS_KEYTYPE);
             ret = -2;
             goto err;
         }
-        ret = signature->verify_init(ctx->op.sig.algctx, provkey, params);
         break;
     case EVP_PKEY_OP_VERIFYMSG:
         if (signature->verify_message_init == NULL) {
